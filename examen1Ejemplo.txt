EXAMINAR DE UN ARREGLO CON EL DEBBUGER: 


(gdb) x/1b (int8_t*) &x+2
0x40401a:       -45



codigo c: ------------------------------------------------------------------------------------------
#include <stdio.h>
#include <stdint.h>

//Cualquier dato menor a 32 bits, lo que hace el compilador es subir todos los datos a 32 bits.

int8_t x[3]={23,126,-45};
int8_t z[3]={-45,4,103};
int32_t w;
int8_t j=1;             //prueba 1
//int8_t j=0;             //prueba 2

int main()
{
    w=x[1] + z[j];
    
    printf("w = %d\n",w);

    return 0;
}


----------------------------------------------------------------------------------


.data

    x: .byte 23,126,-45
    y: .byte -45,4,103
    w: .long 0 
    j: .byte 1 
    //j: .byte 0
    fmt: .asciz "w = %d\n"
    
.text
.global main
main:
	# your code goes here
	
	pushq   %rbx
	
	//w=x[1] + z[j];
	//TODO: cargar x[1] en registro cl y z[j] en registro sil, promover a 32 bits y sumar
	
	
	
	
	
    //printf("w = %d\n",w);
	movl    w,%esi 
	movl    $fmt,%edi 
	movl    $0,%eax
	call    printf

	//return 0;
	xor	%eax, %eax
	popq    rbx
	ret
