SUMAR PUNTO FLOTANT: 

.data
x:
    .byte 0xC3, 0xF5, 0x48, 0x40   // Representa 3.14f en formato float (IEEE 754)

y:
    .byte 0x66, 0x66, 0x06, 0x40   // Representa 2.10f en formato float (IEEE 754)

fmt:
    .byte 0x78, 0x20, 0x3D, 0x20, 0x25, 0x66, 0x0A, 0x00
    // 'x' ' ' '=' ' ' '%' 'f' '\n' '\0' en ASCII

.text
.global main
main:
    subq $8, %rsp

    movss x, %xmm1        
    movss y, %xmm0       
    addss %xmm1, %xmm0
    movss %xmm0, x         
    movss x, %xmm0
    cvtss2sd %xmm0, %xmm0

    movl $fmt, %edi       
    movl $1, %eax
    call printf

    xor %eax, %eax
    addq $8, %rsp
    ret








Registros que no se deben modificar en una funcion (Convencion para Linux: calling convencion)! 

RSP 
RBX. Si lo quiero utilizar de todos modos le debo hacer push (para salvar el valor en la pila) y luego pop. 
EJ: 
pushq %rbx //guarda rbx y alinea el stack. 
popq %rbx


Preservar	rbx, rbp, r12, r13, r14, r15
(y el puntero de pila rsp, obviamente, debe restaurarse al final)
No preservar	rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11


R12-R15: Porrque la funcion que llama los esta utilizando. 


